# ============================================================================
# Nginx Reverse Proxy Configuration
# Unified access point for astron-agent + astron-rpa
# ============================================================================

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=30r/s;

    # Upstream definitions
    upstream rpa_frontend {
        server rpa-frontend:80 max_fails=3 fail_timeout=30s;
    }

    upstream rpa_api {
        server rpa-openapi-service:8020 max_fails=3 fail_timeout=30s;
    }

    upstream rpa_ai_service {
        server rpa-ai-service:8010 max_fails=3 fail_timeout=30s;
    }

    upstream rpa_resource_service {
        server rpa-resource-service:8030 max_fails=3 fail_timeout=30s;
    }

    upstream rpa_robot_service {
        server rpa-robot-service:8040 max_fails=3 fail_timeout=30s;
    }

    upstream agent_frontend {
        server agent-console-frontend:1881 max_fails=3 fail_timeout=30s;
    }

    upstream agent_api {
        server agent-console-hub:8080 max_fails=3 fail_timeout=30s;
    }

    upstream agent_core {
        server agent-core-agent:17870 max_fails=3 fail_timeout=30s;
    }

    upstream agent_rpa_plugin {
        server agent-core-rpa:8003 max_fails=3 fail_timeout=30s;
    }

    upstream casdoor_auth {
        server casdoor:8000 max_fails=3 fail_timeout=30s;
    }

    upstream minio_console {
        server minio:9001 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ====================================================================
        # ASTRON-RPA ROUTES
        # ====================================================================

        # RPA Frontend (Main RPA Interface)
        location /rpa/ {
            limit_req zone=web burst=20 nodelay;
            proxy_pass http://rpa_frontend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # RPA API Gateway
        location /rpa/api/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://rpa_api/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API specific headers
            proxy_set_header Accept application/json;
            proxy_set_header Content-Type application/json;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # RPA AI Service Direct Access
        location /rpa/ai/ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://rpa_ai_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # RPA Resource Service Direct Access
        location /rpa/resource/ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://rpa_resource_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # RPA Robot Service Direct Access
        location /rpa/robot/ {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://rpa_robot_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_Set_header X-Forwarded-Proto $scheme;
        }

        # ====================================================================
        # ASTRON-AGENT ROUTES
        # ====================================================================

        # Agent Console Frontend (Main Agent Interface)
        location /agent/ {
            limit_req zone=web burst=20 nodelay;
            proxy_pass http://agent_frontend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Agent Console API
        location /agent/api/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://agent_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API specific headers
            proxy_set_header Accept application/json;
            proxy_set_header Content-Type application/json;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key" always;
        }

        # Agent Core API Direct Access
        location /agent/core/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://agent_core/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Agent RPA Plugin API
        location /agent/rpa/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://agent_rpa_plugin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Special headers for RPA integration
            proxy_set_header X-RPA-Integration "true";
            proxy_set_header X-Agent-Plugin "rpa";
        }

        # ====================================================================
        # AUTHENTICATION & ADMIN ROUTES
        # ====================================================================

        # Casdoor Authentication Service
        location /auth/ {
            proxy_pass http://casdoor_auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # MinIO Console (Admin Access)
        location /minio/ {
            proxy_pass http://minio_console/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for MinIO console
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # ====================================================================
        # DEFAULT ROUTES & REDIRECTS
        # ====================================================================

        # Root redirect to agent console
        location = / {
            return 302 /agent/;
        }

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
            return 200 "User-agent: *\nDisallow: /\n";
            add_header Content-Type text/plain;
        }

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # ========================================================================
    # MONITORING & STATUS SERVER
    # ========================================================================
    server {
        listen 8090;
        server_name localhost;
        
        # Nginx status
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.50.0.0/16;  # Docker network
            deny all;
        }
        
        # Health check for load balancer
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # ========================================================================
    # SSL/HTTPS SERVER (Uncomment for production with SSL)
    # ========================================================================
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # Include all the same location blocks as the HTTP server
    #     # ... (copy all location blocks from above)
    # }
}

